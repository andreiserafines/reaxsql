import React, { useState } from "react";
import {
  Home,
  Package,
  Mail,
  ShoppingCart,
  Calendar,
  Activity,
  PieChart,
  MessageCircle,
  Settings,
  LogOut,
  Sun,
  Moon,
} from "lucide-react";

const menuItems = [
  {
    section: "Overview",
    items: [
      { icon: <Home size={18} />, label: "Dashboard" },
      { icon: <Package size={18} />, label: "Products" },
      { icon: <Mail size={18} />, label: "Messages", badge: 2 },
      { icon: <ShoppingCart size={18} />, label: "Order" },
      { icon: <Calendar size={18} />, label: "Calendar" },
      { icon: <Activity size={18} />, label: "Activity" },
      { icon: <PieChart size={18} />, label: "Static" },
    ],
  },
  {
    section: "Account",
    items: [
      { icon: <MessageCircle size={18} />, label: "Chat" },
      { icon: <Settings size={18} />, label: "Settings" },
      { icon: <LogOut size={18} />, label: "Logout" },
    ],
  },
];

export default function Sidebar() {
  const [expanded, setExpanded] = useState(true);
  const [darkMode, setDarkMode] = useState(false);

  return (
    <div className={`${darkMode ? "dark" : ""}`}>
      <div
        className={`h-screen flex flex-col justify-between bg-white dark:bg-gray-900 transition-all ${
          expanded ? "w-64" : "w-20"
        } duration-300 p-4`}
      >
        {/* Header */}
        <div>
          <button onClick={() => setExpanded(!expanded)} className="mb-6">
            <img src="/logo.png" alt="Logo" className="w-8 h-8 mx-auto" />
          </button>

          {menuItems.map((section, i) => (
            <div key={i} className="mb-4">
              <p
                className={`text-xs text-gray-500 dark:text-gray-400 mb-2 ${
                  !expanded && "hidden"
                }`}
              >
                {section.section}
              </p>
              <ul className="space-y-2">
                {section.items.map((item, idx) => (
                  <li
                    key={idx}
                    className="flex items-center justify-between hover:bg-gray-100 dark:hover:bg-gray-800 rounded px-2 py-2 cursor-pointer group"
                  >
                    <div className="flex items-center gap-4">
                    <div className="text-white">
                      {item.icon}
                    </div>
                      {expanded && (
                        <span className="text-sm text-gray-700 dark:text-gray-200">
                          {item.label}
                        </span>
                      )}
                    </div>
                    {/* {item.badge && (
                      <span className="text-xs bg-blue-500 text-white rounded-full px-2">
                        {item.badge}
                      </span>
                    )} */}
                  </li>
                ))}
              </ul>
            </div>
          ))}
        </div>

        {/* Bottom */}
        <div className="space-y-4">
          {/* Dark Mode Toggle */}
          <div className="flex items-center justify-between px-2">
            {darkMode ? <Moon size={18} /> : <Sun size={18} />}
            <button onClick={() => setDarkMode(!darkMode)} className="ml-auto">
              <div
                className={`w-10 h-5 rounded-full ${
                  darkMode ? "bg-gray-600" : "bg-gray-300"
                } relative`}
              >
                <div
                  className={`absolute w-4 h-4 bg-white rounded-full top-0.5 transition-all ${
                    darkMode ? "left-5" : "left-1"
                  }`}
                ></div>
              </div>
            </button>
          </div>

          {/* User */}
          <div className="flex items-center gap-2 p-2 rounded hover:bg-gray-100 dark:hover:bg-gray-800">
            <img src="/user.jpg" className="w-8 h-8 rounded-full" />
            {expanded && (
              <div>
                <p className="text-sm text-gray-800 dark:text-white font-medium">
                  John Wilson
                </p>
                <p className="text-xs text-gray-500 dark:text-gray-400">
                  Wilson@gmail.com
                </p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
